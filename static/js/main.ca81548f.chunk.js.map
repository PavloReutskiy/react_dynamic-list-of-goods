{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","React","memo","goods","map","id","color","name","style","getAll","fetch","then","response","ok","json","Promise","reject","Error","status","statusText","App","useState","setGoods","errorMessage","setErrorMessage","visibleGoods","useMemo","className","type","onClick","catch","error","message","sort","goodA","goodB","localeCompare","sortGoods","slice","filter","ReactDOM","render","document","getElementById"],"mappings":"iNAOaA,EAA6BC,IAAMC,MAC9C,gBAAGC,EAAH,EAAGA,MAAH,OACE,6BACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACT,oBAEE,UAAQ,OACRC,MAAO,CAAEF,SAHX,SAKGC,GAJIF,WCPR,SAASI,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAKA,EAASC,GACxBD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAJ,UAAaL,EAASM,OAAtB,aAAiCN,EAASO,iBAI1D,ICPMC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOlB,EAAP,KAAcmB,EAAd,KACA,EAAwCD,mBAAS,IAAjD,mBAAOE,EAAP,KAAqBC,EAArB,KAoBMC,EAAeC,mBAAQ,WAC3B,OAAOvB,IACN,CAACA,IAEJ,OACE,sBAAKwB,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QA7BwB,WAC5BpB,IACGE,KAAKW,GACLQ,OAAM,SAAAC,GAAK,OAAIP,EAAgBO,EAAMC,aAuBtC,4BAOCT,GAAgB,mBAAGf,MAAO,CAAEF,MAAO,OAAnB,SAA6BiB,IAE9C,wBACEK,KAAK,SACL,UAAQ,oBACRC,QAhCsB,WDFrBpB,IACJE,MAAK,SAAAR,GAAK,OAAIA,EAAM8B,MAAK,SAACC,EAAOC,GAAR,OACxBD,EAAM3B,KAAK6B,cAAcD,EAAM5B,YAEhCI,MAAK,SAAA0B,GAAS,OAAIA,EAAUC,MAAM,EAAG,MCAnC3B,KAAKW,GACLQ,OAAM,SAAAC,GAAK,OAAIP,EAAgBO,EAAMC,aA0BtC,gCAOCT,GAAgB,mBAAGf,MAAO,CAAEF,MAAO,OAAnB,SAA6BiB,IAE9C,wBACEK,KAAK,SACL,UAAQ,aACRC,QAnCmB,WDAlBpB,IACJE,MAAK,SAAAR,GAAK,OAAIA,EAAMoC,QAAO,kBAAyB,QAAzB,EAAGjC,YCC5BK,KAAKW,GACLQ,OAAM,SAAAC,GAAK,OAAIP,EAAgBO,EAAMC,aA6BtC,4BAOCT,GAAgB,mBAAGf,MAAO,CAAEF,MAAO,OAAnB,SAA6BiB,IAE9C,cAACvB,EAAD,CAAWG,MAAOsB,QC5DxBe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.ca81548f.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(\n  ({ goods }) => (\n    <ul>\n      {goods.map(({ id, color, name }) => (\n        <li\n          key={id}\n          data-cy=\"good\"\n          style={{ color }}\n        >\n          {name}\n        </li>\n      ))}\n    </ul>\n  ),\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => (response.ok\n      ? response.json()\n      : Promise.reject(new Error(`${response.status}: ${response.statusText}`))\n    ));\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods.sort((goodA, goodB) => (\n      goodA.name.localeCompare(goodB.name)\n    )))\n    .then(sortGoods => sortGoods.slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(({ color }) => color === 'red'));\n};\n","import React, { useMemo, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleLoadingAllGoods = () => {\n    getAll()\n      .then(setGoods)\n      .catch(error => setErrorMessage(error.message));\n  };\n\n  const handleLoading5First = () => {\n    get5First()\n      .then(setGoods)\n      .catch(error => setErrorMessage(error.message));\n  };\n\n  const handleLoadingRed = () => {\n    getRedGoods()\n      .then(setGoods)\n      .catch(error => setErrorMessage(error.message));\n  };\n\n  const visibleGoods = useMemo(() => {\n    return goods;\n  }, [goods]);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={handleLoadingAllGoods}\n      >\n        Load all goods\n      </button>\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={handleLoading5First}\n      >\n        Load 5 first goods\n      </button>\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={handleLoadingRed}\n      >\n        Load red goods\n      </button>\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n\n      <GoodsList goods={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}